"""Company Access & Tenant plan assignment

Revision ID: 44306a538650
Revises: 70ab8ec8295a
Create Date: 2025-07-14 16:58:19.144577

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '44306a538650'
down_revision: Union[str, None] = '70ab8ec8295a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenant_plan_assignments',
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('auto_renewal', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_by', sa.String(length=50), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id')
    )
    op.create_index(op.f('ix_tenant_plan_assignments_id'), 'tenant_plan_assignments', ['id'], unique=False)
    op.drop_constraint(op.f('company_accesses_plan_id_fkey'), 'company_accesses', type_='foreignkey')
    op.drop_column('company_accesses', 'plan_expiration_date')
    op.drop_column('company_accesses', 'auto_renewal')
    op.drop_column('company_accesses', 'plan_acquisition_date')
    op.drop_column('company_accesses', 'plan_id')
    op.add_column('plans', sa.Column('max_associates', sa.Integer(), nullable=False))
    op.drop_column('plans', 'max_tenants')
    op.add_column('tenant_documents', sa.Column('effective_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('tenant_documents', 'effective_date')
    op.add_column('plans', sa.Column('max_tenants', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_column('plans', 'max_associates')
    op.add_column('company_accesses', sa.Column('plan_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('company_accesses', sa.Column('plan_acquisition_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('company_accesses', sa.Column('auto_renewal', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('company_accesses', sa.Column('plan_expiration_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('company_accesses_plan_id_fkey'), 'company_accesses', 'plans', ['plan_id'], ['id'])
    op.drop_index(op.f('ix_tenant_plan_assignments_id'), table_name='tenant_plan_assignments')
    op.drop_table('tenant_plan_assignments')
    # ### end Alembic commands ###
